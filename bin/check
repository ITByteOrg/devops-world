#!/usr/bin/env bash
#====================================================================
# CHECK
# Description : Comprehensive validation: style, security, tests, docs, lint, and pre-commit config.
#====================================================================

source scripts/shared/bootstrap.sh
source scripts/shared/check-core.sh

STATUS="[OK] All checks passed"
ACTIONS=()
EXIT_CODE=0

echo "Running full validation..."

# --- Pre-commit hook presence check ---
PRECOMMIT_FILE=".pre-commit-config.yaml"

if [[ ! -f "$PRECOMMIT_FILE" ]]; then
  echo ""
  echo "Inspecting pre-commit hooks:"
  echo "   [X] .pre-commit-config.yaml not found."
  exit 1
fi

echo ""
echo "Inspecting pre-commit hooks..."
missing_hooks=()

for hook_id in flake8 black isort trufflehog-pwsh; do
  if ! grep -q "$hook_id" "$PRECOMMIT_FILE"; then
    missing_hooks+=("$hook_id")
  fi
done

if [[ ${#missing_hooks[@]} -gt 0 ]]; then
  echo "   [X] Missing pre-commit hooks:"
  for h in "${missing_hooks[@]}"; do
    echo "   - $h"
  done
  echo "Please ensure these are defined in .pre-commit-config.yaml"
  exit 1
else
  echo "   [OK] All required pre-commit hooks are present."
  ACTIONS+=("[OK] pre-commit hooks present")
fi

# --- Lint (delegated to bin/lint) ---
run_check "LINT" \
  "bash bin/lint" \
  "Lint checks passed" \
  "Lint validation failed"

# Note: flake8 is run in bin/lint, so we don't need to run it again here.

# --- Bandit Security Scan ---
run_check "BANDIT" \
  "bandit -r src" \
  "No security issues detected by Bandit" \
  "Bandit scan failed"
  "true"  # quiet_supported

# --- Pytest ---
run_check "PYTEST" \
  "pytest $@" \
  "All tests passed" \
  "pytest failed"

# --- pre-commit-config.yaml validation ---
run_check "Validate .pre-commit-config.yaml" \
  "pre-commit validate-config .pre-commit-config.yaml" \
  ".pre-commit-config.yaml is valid" \
  "Invalid .pre-commit-config.yaml"

# --- Write Summary ---
ACTIONS_JOINED=$(IFS=','; echo "${ACTIONS[*]}")
bash scripts/shared/log-summary.sh \
  --title "Check Summary" \
  --status "$STATUS" \
  --actions "$ACTIONS_JOINED" \
  --output "logs/check-summary.md"

exit $EXIT_CODE
