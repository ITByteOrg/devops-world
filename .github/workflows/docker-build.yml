name: Docker CI Workflow

on:
  push:
    branches:
      - main
      - feature
      - feature/*
      - fix/*
      - hotfix/*
      - docs/*
  pull_request:
    branches:
      - feature
      - main
    types: [opened, synchronize, reopened]

jobs:
  dev-lint-and-build:
    if: |
      startsWith(github.ref, 'refs/heads/feature') ||
      startsWith(github.ref, 'refs/heads/feature/') ||
      startsWith(github.ref, 'refs/heads/fix/') ||
      startsWith(github.ref, 'refs/heads/hotfix/') ||
      startsWith(github.ref, 'refs/heads/docs/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show triggering ref
        run: |
          echo "Triggered by ref: ${{ github.ref }}"
      
      - name: Install Hadolint
        run: |
          wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          chmod +x /usr/local/bin/hadolint

      - name: Lint Dockerfile
        run: hadolint Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t devops-world:dev .

  pr-validation:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        run: hadolint Dockerfile

      - name: Build Docker image (PR)
        run: docker build -t devops-world:pr-${{ github.event.pull_request.number }} .

  prod-build-and-push:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t devops-world:latest .
          docker tag devops-world:latest your-dockerhub-username/devops-world:latest
          docker push your-dockerhub-username/devops-world:latest
